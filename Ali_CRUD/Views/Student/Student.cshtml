@model Ali_CRUD.Context.tbl_Student
@{
    ViewBag.Title = "Student";
}
<style>
    .error {
        color: red;
    }
</style>
<h2>Student</h2>
@*
    HTML helper method BeginForm is used that will take 3 parameters:
    1. ActionName (AddStudent)
    2. ControllerName (Student)
    3. Form Method (Post)
*@
@using (Html.BeginForm("AddStudent", "Student", FormMethod.Post))
{
    <div class="container">
        <div class="form-group">
            @* This is a hidden html content contain the Id value just used for binding purspose. *@
            @Html.HiddenFor(x => x.Id)
            <label>Name</label>
            @*
                This is an html helper method used for the form validtions it will take 3 parameters:
                1. Specifies the property for which we want to show the error message.
                2. Used for custom error message.
                3. Used for CSS, Styles, etc i.e "error" class for styles.
            *@
            @Html.ValidationMessageFor(x => x.Name, "", new { @class = "error" })

            @*
                This is an html helper method used for the input fields just like <input> tag it will take 2 parameter:
                1. This parameter is used for model for a specfic model just like name="name" in <input>.
                2. Used for CSS, Styles, etc i.e "error" class for styles.
            *@
            @Html.TextBoxFor(x => x.Name, new { @class = "form-control" })
        </div>
        <div class="form-group">
            <label>First Name</label>
            @Html.ValidationMessageFor(x => x.Fname, "", new { @class = "error" })
            @Html.TextBoxFor(x => x.Fname, new { @class = "form-control" })
        </div>
        <div class="form-group">
            <label>Email</label>
            @Html.ValidationMessageFor(x => x.Email, "", new { @class = "error" })
            @Html.TextBoxFor(x => x.Email, new { @class = "form-control" })
        </div>
        <div class="form-group">
            <label>Mobile</label>
            @Html.ValidationMessageFor(x => x.Mobile, "", new { @class = "error" })
            @Html.TextBoxFor(x => x.Mobile, new { @class = "form-control" })
        </div>
        <div class="form-group">
            <label>Description</label>
            @Html.TextAreaFor(x => x.Description, new { @class = "form-control", @rows = "5" })
        </div>

        <div class="form-group">
            <button type="submit" class="btn btn-primary">Submit</button>
        </div>
    </div>
}
